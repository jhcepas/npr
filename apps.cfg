[builtin_apps]
## Portable applications are used by default
#app_name             path    , max_cpu
muscle              = built-in, 1 
mafft               = built-in, 2 
clustalo            = built-in, 1 
trimal              = built-in, 1
readal              = built-in, 1 
tcoffee             = built-in, 1 
phyml               = built-in, 1 
raxml-pthreads      = built-in, 48 
raxml               = built-in, 1 
raxml-pthreads-sse3 = built-in, 48 
raxml-sse3          = built-in, 1 
raxml-pthreads-avx  = built-in, 48 
raxml-avx           = built-in, 1 
raxml-pthreads-avx2 = built-in, 48 
raxml-avx2          = built-in, 1 
dialigntx           = built-in, 1 
fasttree            = built-in, 2 
statal              = built-in, 1 

# ################# 
# APPS
# ################
[meta_aligner_default]
_app = metaligner
_alg_trimming = False
_aligners = @muscle_default, @mafft_default, @clustalo_default, @dialigntx_default

[meta_aligner_trimmed]
_app = metaligner
_alg_trimming = True
_aligners = @muscle_default, @mafft_default, @clustalo_default, @dialigntx_default

[trimal01]
_app = trimal
-gt = 0.1

[trimal02]
_app = trimal
-gt = 0.2

[trimal03]
_app = trimal
-gt = 0.3

[trimal_gappyout]
_app = trimal
-gappyout= ''

[muscle_default]
_app = muscle

[mafft_default]
_app = mafft
--auto = ""

[mafft_einsi]  
# E-INS-i
#is suitable for alignments like this:
#
#oooooooooXXX------XXXX---------------------------------XXXXXXXXXXX-XXXXXXXXXXXXXXXooooooooooooo
#---------XXXXXXXXXXXXXooo------------------------------XXXXXXXXXXXXXXXXXX-XXXXXXXX-------------
#-----ooooXXXXXX---XXXXooooooooooo----------------------XXXXX----XXXXXXXXXXXXXXXXXXooooooooooooo
#---------XXXXX----XXXXoooooooooooooooooooooooooooooooooXXXXX-XXXXXXXXXXXX--XXXXXXX-------------
#---------XXXXX----XXXX---------------------------------XXXXX---XXXXXXXXXX--XXXXXXXooooo--------
# where 'X's indicate alignable residues, 'o's indicate unalignable residues and
# '-'s indicate gaps. Unalignable residues are left unaligned at the pairwise
# alignment stage, because of the use of the generalized affine gap
# cost. Therefore E-INS-i is applicable to a difficult problem such as RNA
# polymerase, which has several conserved motifs embedded in long unalignable
# regions. As E-INS-i has the minimum assumption of the three methods, this is
# recommended if the nature of sequences to be aligned is not clear. Note that
# E-INS-i assumes that the arrangement of the conserved motifs is shared by all
# sequences.
_app = mafft
--genafpair = ''
--maxiterate=1000

[mafft_linsi]
# L-INS-i
#is suitable to:
#ooooooooooooooooooooooooooooooooXXXXXXXXXXX-XXXXXXXXXXXXXXX------------------
#--------------------------------XX-XXXXXXXXXXXXXXX-XXXXXXXXooooooooooo-------
#------------------ooooooooooooooXXXXX----XXXXXXXX---XXXXXXXooooooooooo-------
#--------ooooooooooooooooooooooooXXXXX-XXXXXXXXXX----XXXXXXXoooooooooooooooooo
#--------------------------------XXXXXXXXXXXXXXXX----XXXXXXX------------------
# L-INS-i can align a set of sequences containing sequences flanking around one
# alignable domain. Flanking sequences are ignored in the pairwise alignment by
# the Smith-Waterman algorithm. Note that the input sequences are assumed to
# have only one alignable domain. In benchmark tests, the ref4 of BAliBASE
# corresponds to this. The other categories of BAliBASE also correspond to
# similar situations, because they have flanking sequences. L-INS-i also shows
# higher accuracy values for a part of SABmark and HOMSTRAD than G-INS-i, but we
# have not identified the reason for this.
_app = mafft
--localpair = ''
--maxiterate = 1000

[mafft_ginsi]
#G-INS-i
#is suitable to:
# XXXXXXXXXXX-XXXXXXXXXXXXXXX
# XX-XXXXXXXXXXXXXXX-XXXXXXXX
# XXXXX----XXXXXXXX---XXXXXXX
# XXXXX-XXXXXXXXXX----XXXXXXX
# XXXXXXXXXXXXXXXX----XXXXXXX
# G-INS-i assumes that entire region can be aligned and tries to align them
#globally using the Needleman-Wunsch algorithm; that is, a set of sequences of
#one domain must be extracted by truncating flanking sequences. In benchmark
#tests, SABmark and HOMSTRAD correspond to this. 
_app = mafft
--globalpair = ''
--maxiterate = 1000

[clustalo_default]
_app = clustalo

[dialigntx_default]
_app = dialigntx

[prottest_default]
_app = prottest
_lk_mode = "phyml" # let "phyml" or "raxml" to optimize likelihood
_models = "JTT", "WAG", "VT", "LG", "MtREV"
-f = m            # char freq (m)odel or (e)stimated
--pinv = e        # Proportion of invariant sites
--alpha = e       #
--nclasses =  4   # Number of classes
--no_memory_check = ""
--quiet = ""

[bionj_default]
_app = phyml
_aa_model = JTT # AA model used if no model selection is performed
_nt_model = GTR # Nt model used if no model selection is performed
--no_memory_check = ""
--quiet = ""
--pinv = e        # Proportion of invariant sites.  Fixed value in the
                  # [0,1] range or "e" for estimated
--alpha = e       # Gamma distribution shape parameter. fixed value or
                  # "e" for "estimated"
--nclasses =  4   # Number of rate categories
-o = lr          # Tree optimization
-f = m            # e: estiamte character frequencies.  m: character
                  # frequencies from model
--bootstrap = -2  #  approximate likelihood ratio test returning
                  #  Chi2-based parametric branch supports.
[fasttree_default]
_app = fasttree

[fasttree_full]
_app = fasttree
-pseudo = ''
-mlacc = 3
-slownni = ''

[phyml_default]
_app = phyml
_aa_model = JTT # AA model used if no model selection is performed
_nt_model = GTR # Nt model used if no model selection is performed
--no_memory_check = ""
--quiet = ""
--pinv = e        # Proportion of invariant sites.  Fixed value in the
                  # [0,1] range or "e" for estimated
--alpha = e       # Gamma distribution shape parameter. fixed value or
                  # "e" for "estimated"
--nclasses =  4   # Number of rate categories
-o = tlr          # Tree optimization
-f = m            # e: estiamte character frequencies.  m: character
                  # frequencies from model
--bootstrap = -2  #  approximate likelihood ratio test returning
                  #  Chi2-based parametric branch supports.

[phyml_default_bootstrap]
_app = phyml
_aa_model = JTT # AA model used if no model selection is performed
_nt_model = GTR # Nt model used if no model selection is performed
--no_memory_check = ""
--quiet = ""
--pinv = e        # Proportion of invariant sites.  Fixed value in the
                  # [0,1] range or "e" for estimated
--alpha = e       # Gamma distribution shape parameter. fixed value or
                  # "e" for "estimated"
--nclasses =  4   # Number of rate categories
-o = tlr          # Tree optimization
-f = m            # e: estiamte character frequencies.  m: character
                  # frequencies from model
--bootstrap = 100 #  approximate likelihood ratio test returning
                  #  Chi2-based parametric branch supports.

[raxml_default]
_app = raxml-sse3
#_execution = sge # you can choose between "sge" or "insitu"
_bootstrap = alrt # alrt, alrt_phyml or and integer number 
_method = GAMMA # GAMMA or CAT
_aa_model = JTT # Model used if no model selection is performed
#_pinv = I # If True, estimates the proportion of invariable sites.
#_ebf = F # Empirical base frequencies
-f = d
-p = 31416 # Random seed to generate starting tree. Make results reproducible


[raxml_default_bootstrap]
_app = raxml-sse3
#_execution = sge # you can choose between "sge" or "insitu"
_bootstrap = 100 # alrt, alrt_phyml or and integer number 
_method = GAMMA # GAMMA or CAT
_aa_model = JTT # Model used if no model selection is performed
#_pinv = I # If True, estimates the proportion of invariable sites.
#_ebf = F # Empirical base frequencies
-f = d
-p = 31416 # Random seed to generate starting tree. Make results reproducible

# ################# 
# SUPERMATRIX 
# ################
[concat_full_default]
_app       = main
_max_seqs = 999999999,
_npr        = @noNPR,
_workflow   = @supermatrix_full, 
_appset = @builtin_apps

[supermatrix_full]
_app = supermatrix
_cog_selector         = @brh_cog10-20
_alg_concatenator     = @alg_concat_default
_aa_tree_builder      = @raxml_default
_nt_tree_builder      = @raxml_default

[alg_concat_default]
_app = concatalg
_default_aa_model = JTT  
_default_nt_model = GTR
_workflow = @meta_aligner_trimmed-trimal01-prottest_default-phyml_default

[brh_cog10-20]
_app = cogselector
_species_missing_factor = 0.10
_max_species_missing_factor = 0.20
_max_cogs = 999999

[eggnog_sptree_fast]
_app        = main
_max_seqs   = 999999999,
_npr        = @noNPR,
_workflow   = @w.eggnog_sptree_fast, 
_appset     = @builtin_apps

[w.eggnog_sptree_fast]
_app = supermatrix
_cog_selector         = @brh_cog_all
_alg_concatenator     = @alg_concat_fast
_aa_tree_builder      = @fasttree_full
_nt_tree_builder      = @fasttree_full

[eggnog_sptree]
_app        = main
_max_seqs   = 999999999,
_npr        = @noNPR,
_workflow   = @w.eggnog_sptree, 
_appset     = @builtin_apps

[w.eggnog_sptree]
_app = supermatrix
_cog_selector         = @brh_cog_all
_alg_concatenator     = @alg_concat_fast_modeltest
_aa_tree_builder      = @raxml_default
_nt_tree_builder      = @raxml_default

[sptree_020]
_app        = main
_max_seqs   = 999999999,
_npr        = @noNPR,
_workflow   = @w.sptree_020, 
_appset     = @builtin_apps

[w.sptree_020]
_app = supermatrix
_cog_selector         = @brh_cog_020
_alg_concatenator     = @alg_concat_fast
_aa_tree_builder      = @raxml_default
_nt_tree_builder      = @raxml_default

[sptree_020_modeltest]
_app        = main
_max_seqs   = 999999999,
_npr        = @noNPR,
_workflow   = @w.sptree_020_modeltest, 
_appset     = @builtin_apps

[w.sptree_020_modeltest]
_app = supermatrix
_cog_selector         = @brh_cog_020
_alg_concatenator     = @alg_concat_fast_modeltest
_aa_tree_builder      = @raxml_default
_nt_tree_builder      = @raxml_default

[sptree_020_fast]
_app        = main
_max_seqs   = 999999999,
_npr        = @noNPR,
_workflow   = @w.sptree_020_fast, 
_appset     = @builtin_apps

[w.sptree_020_fast]
_app = supermatrix
_cog_selector         = @brh_cog_020
_alg_concatenator     = @alg_concat_fast
_aa_tree_builder      = @fasttree_full
_nt_tree_builder      = @fasttree_full

[alg_concat_fast_modeltest]
_app = concatalg
_default_aa_model = JTT  
_default_nt_model = GTR
_workflow = @clustalo_default-none-prottest_default-none

[alg_concat_fast]
_app = concatalg
_default_aa_model = JTT  
_default_nt_model = GTR
_workflow = @clustalo_default-none-none-none

[clustalo_default-none-prottest_default-none]
_app = main
_max_seqs = 9999999999,
_npr = @noNPR,
_workflow = @w.clustalo_default-none-prottest_default-none,
_appset = @builtin_apps

[w.clustalo_default-none-prottest_default-none]
_app = genetree
_aa_aligner           =   @clustalo_default
_aa_alg_cleaner       =   none
_aa_model_tester      =   @prottest_default
_aa_tree_builder      =   none
 
_nt_aligner           =   @clustalo_default
_nt_alg_cleaner       =   none
_nt_model_tester      =   none
_nt_tree_builder      =   none


[clustalo_default-none-none-none]
_app = main
_max_seqs = 9999999999,
_npr = @noNPR,
_workflow = @w.clustalo_default-none-none-none,
_appset = @builtin_apps

[w.clustalo_default-none-none-none]
_app = genetree
_aa_aligner           =   @clustalo_default
_aa_alg_cleaner       =   none
_aa_model_tester      =   none
_aa_tree_builder      =   none
 
_nt_aligner           =   @clustalo_default
_nt_alg_cleaner       =   none
_nt_model_tester      =   none
_nt_tree_builder      =   none


[brh_cog_all]
_app = cogselector
_species_missing_factor = 1.0
_max_species_missing_factor = 1.0
_max_cogs = 999999

[brh_cog_020]
_app = cogselector
_species_missing_factor = 0.125
_max_species_missing_factor = 0.20
_max_cogs = 999999


[concat_dummy]
_inherits = concat_full_default
_workflow = @supermatrix_dummy,

[supermatrix_dummy]
_app = supermatrix
_cog_selector         = @brh_cog_dummy 
_alg_concatenator     = @alg_concat_fast
_aa_tree_builder      = @fasttree_default
_nt_tree_builder      = @fasttree_default

[brh_cog_dummy]
_app = cogselector
_species_missing_factor = 0.10
_max_species_missing_factor = 0.20
_max_cogs = 4

# ################# 
# NPR configs
# ################
[noNPR]
_app = npr
_max_iters = 1
_max_seq_similarity   =   1.0
_switch_aa_similarity =   0.95
_min_branch_support   =   1.0
_min_npr_size         =   3
_tree_splitter        =   @splitter_default

[fullNPR]
_inherits = noNPR
_max_iters = 999999
_min_npr_size =   4

[splitter_default]
_app = treesplitter
_max_outgroup_size = 10%
_min_outgroup_support = 0.90
_outgroup_topology_dist = False
_first_split = midpoint

